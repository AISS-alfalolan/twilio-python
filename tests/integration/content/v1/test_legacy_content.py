# coding=utf-8
r"""
This code was generated by
\ / _    _  _|   _  _
 | (_)\/(_)(_|\/| |(/_  v1.0.0
      /       /
"""

from tests import IntegrationTestCase
from tests.holodeck import Request
from twilio.base.exceptions import TwilioException
from twilio.http.response import Response


class LegacyContentTestCase(IntegrationTestCase):

    def test_list_request(self):
        self.holodeck.mock(Response(500, ''))

        with self.assertRaises(TwilioException):
            self.client.content.v1.legacy_contents.list()

        self.holodeck.assert_has_request(Request(
            'get',
            'https://content.twilio.com/v1/LegacyContent',
        ))

    def test_read_empty_response(self):
        self.holodeck.mock(Response(
            200,
            '''
            {
                "contents": [],
                "meta": {
                    "page": 0,
                    "page_size": 10,
                    "first_page_url": "https://content.twilio.com/v1/LegacyContent?PageSize=10&Page=0",
                    "previous_page_url": null,
                    "url": "https://content.twilio.com/v1/LegacyContent?PageSize=10&Page=0",
                    "next_page_url": null,
                    "key": "contents"
                }
            }
            '''
        ))

        actual = self.client.content.v1.legacy_contents.list()

        self.assertIsNotNone(actual)

    def test_read_results_response(self):
        self.holodeck.mock(Response(
            200,
            '''
            {
                "contents": [
                    {
                        "sid": "HXaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                        "account_sid": "ACaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                        "friendly_name": "Some content",
                        "language": "en",
                        "variables": {
                            "name": "foo"
                        },
                        "legacy_template_name": "legacy_template_1",
                        "legacy_body": "a body",
                        "types": {
                            "twilio/text": {
                                "body": "Foo Bar Co is located at 39.7392, 104.9903"
                            },
                            "twilio/location": {
                                "longitude": 104.9903,
                                "latitude": 39.7392,
                                "label": "Foo Bar Co"
                            }
                        },
                        "url": "https://content.twilio.com/v1/LegacyContent",
                        "date_created": "2015-07-30T19:00:00Z",
                        "date_updated": "2015-07-30T19:00:00Z"
                    },
                    {
                        "sid": "HXaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                        "account_sid": "ACaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                        "friendly_name": "Anotha content",
                        "language": "en",
                        "variables": {
                            "name": "foo"
                        },
                        "legacy_template_name": "legacy_template_2",
                        "legacy_body": "another body",
                        "types": {
                            "twilio/text": {
                                "body": "Foo Bar Co is located at 39.7392, 104.9903"
                            },
                            "twilio/location": {
                                "longitude": 104.9903,
                                "latitude": 39.7392,
                                "label": "Foo Bar Co"
                            }
                        },
                        "url": "https://content.twilio.com/v1/LegacyContent",
                        "date_created": "2015-07-30T19:00:00Z",
                        "date_updated": "2015-07-30T19:00:00Z"
                    },
                    {
                        "sid": "HXaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                        "account_sid": "ACaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                        "friendly_name": "Third content",
                        "language": "en",
                        "variables": {
                            "name": "foo"
                        },
                        "legacy_template_name": "legacy_template_3",
                        "legacy_body": "a third body",
                        "types": {
                            "twilio/text": {
                                "body": "Foo Bar Co is located at 39.7392, 104.9903"
                            },
                            "twilio/location": {
                                "longitude": 104.9903,
                                "latitude": 39.7392,
                                "label": "Foo Bar Co"
                            }
                        },
                        "url": "https://content.twilio.com/v1/LegacyContent",
                        "date_created": "2015-07-30T19:00:00Z",
                        "date_updated": "2015-07-30T19:00:00Z"
                    }
                ],
                "meta": {
                    "page": 0,
                    "page_size": 20,
                    "first_page_url": "https://content.twilio.com/v1/LegacyContent?PageSize=20&Page=0",
                    "previous_page_url": null,
                    "url": "https://content.twilio.com/v1/LegacyContent?PageSize=20&Page=0",
                    "next_page_url": null,
                    "key": "contents"
                }
            }
            '''
        ))

        actual = self.client.content.v1.legacy_contents.list()

        self.assertIsNotNone(actual)
